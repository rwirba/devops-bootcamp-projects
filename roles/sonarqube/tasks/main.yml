---
- name: Create sonar user
  ansible.builtin.user:
    name: sonar
    shell: /bin/false
    create_home: no

- name: Download SonarQube
  ansible.builtin.get_url:
    url: https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-9.9.0.65466.zip
    dest: /tmp/sonarqube.zip

- name: Extract SonarQube
  ansible.builtin.unarchive:
    src: /tmp/sonarqube.zip
    dest: /opt
    remote_src: yes

- name: Create symlink /opt/sonarqube
  ansible.builtin.file:
    src: /opt/sonarqube-9.9.0.65466
    dest: /opt/sonarqube
    state: link

- name: Set ownership of SonarQube files
  ansible.builtin.file:
    path: /opt/sonarqube-9.9.0.65466
    state: directory
    recurse: yes
    owner: sonar
    group: sonar

- name: Ensure vm.max_map_count is set for Elasticsearch
  ansible.builtin.sysctl:
    name: vm.max_map_count
    value: '262144'
    state: present
    reload: yes

- name: Create SonarQube logs directory (if missing)
  ansible.builtin.file:
    path: /opt/sonarqube/logs
    state: directory
    owner: sonar
    group: sonar
    mode: '0755'

- name: Create SonarQube systemd service
  ansible.builtin.copy:
    dest: /etc/systemd/system/sonarqube.service
    content: |
      [Unit]
      Description=SonarQube service
      After=network.target

      [Service]
      Type=forking
      ExecStart=/opt/sonarqube/bin/linux-x86-64/sonar.sh start
      ExecStop=/opt/sonarqube/bin/linux-x86-64/sonar.sh stop
      User=sonar
      Group=sonar
      Restart=on-failure
      LimitNOFILE=65536
      Environment=JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64

      [Install]
      WantedBy=multi-user.target

- name: Reload systemd daemon
  ansible.builtin.systemd:
    daemon_reload: yes

- name: Enable and start SonarQube
  ansible.builtin.systemd:
    name: sonarqube
    enabled: yes
    state: restarted
